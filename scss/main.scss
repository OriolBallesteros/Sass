@import "partials/functions";
@import "partials/variables";  //partials are defined with a _ on the name. When we import, we just import it with the name itself. Prepocessor is smart enough
@import "partials/mixins";

@include google-font("Alegreya+Sans");
@include google-font("Titillium+Web");

@include fancy-links;         //calling a mixin out of a selector and before the body do apply its style globally

@include apply-to-ie-6 {
  body {
    font-size: 125%;
  }
}

.error{
  color: red;
}

.critical-error{
  @extend .error;
  bottom: 1px solid red;
  font-weight: bold;
}

/*$contrast: low;*/
body {
  font-family: $text-font;
  color: $text-color;
  font-size: em(18px);        //em() -- own built function
  background-color: $body-background-color;

  /*@if $contrast == high {
    color: #000;
  }@else if $contrast == low {
    color: #999;
  }@else {
    color: $text-color;
  }*/

  /*@media only screen and (max-width: 960px){  //Nested media queries
    font-size: 125%;
  }*/ //This commented block is the same as the line below. Using mixins we have a better look, more readable code
  @include large-screens {
    font-size: 125%;
  }
}

h1, h2, h3, h4 {
  font-family: $headline-font;
}

h2 {
  @include large-text;
}

p {
  font-family: $text-font;
}

a {
  color: $link-color;

  &:hover{
    color: darken($link-color, 15%);    //built-in function darken()
  }
}

%highlight {          //extend only selector. No CSS code will be generated from %foo{...}. 
  font-style: italic;
}

.sub-title{
  @extend %highlight;
  @extend .nonExisting !optional;     //!optional prevents preprocessor form crashing. If it exists, use it, if not, go ahead
  font-size: em(20px);
}

.warning-button {
  @include warning;     //we call the mixins using @include /name/
  padding: 8px 12px;
}

.cta-button {
  @extend .warning-button;    //About @extend -- in a media query we can't extend from something out of it
  @extend .error;
  @include rounded;
  font-weight: bold;
}

.super-cta-button{
  @extend .cta-button;
  font-size: em(20px);
}

#header {
  @include box($border: 1px solid #fff, $radius: 12px);  //passing a variables due to rounded is a mixin with arguments. Default values are also defined. 
  @include box-shadow(2px 0px 4px #999, 1px 1px 6px $secondary-color);
  height: $header-height;
  background-color: $theme-color;

  #main-menu {

    li {
      display: inline;
    }

    a {
      color: $menu-item-color;
      padding: 6px 8px; 
      border-bottom: 1px solid transparentize(#fefefe, 1);    //tranparentize() 
      transition: border-bottom .5s;
      transition-timing-function: ease-in-out;

      &:hover{
        border-bottom: 1px solid opacify(#fefefe, .5);        //opacify()
      }
    }
  }
  
  #logo {

  }
}

#main {
  width: $content-width;
  @include large-screens{
    width: auto;
    max-width: $content-width;
  }
  margin-left: auto;
  margin-right: auto;

  #content {
    float: left;
    width: 6*$col; 
  }

  #sidebar {
    float: right;
    width: 2*$col; 

    li {
      list-style-type: none;
      padding: em(16px) em(20px);
      border-bottom: 1px dashed #999;

      &:hover{
        background-color: #efefef;
      }
    }
  }
}

#footer {
  /*height: $footer-height;
  background-color: $ternary-color;*/
}
